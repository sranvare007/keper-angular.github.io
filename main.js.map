{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/add-note/add-note.component.ts","./src/app/add-note/add-note.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,0EAA6B;;6FDMhB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACiB;AACF;;;;;AAO1D,MAAM,gBAAgB;IAG3B;QAFA,gBAAW,GAAU,2EAA2E,CAAC;QACjG,cAAS,GAAU,EAAE;IACL,CAAC;IAEjB,QAAQ;QAEN,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC9C,sDAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,KAAK,GAAE,CAAa,KAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxF,6DAA6D;YAC7D,IAAI;YACJ,wDAAwD;YACxD,IAAI;YACJ,OAAO;YACP,IAAI;YACJ,kDAAkD;YAClD,IAAI;YACJ,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;;gFAnBU,gBAAgB;gGAAhB,gBAAgB;QCT7B,uEACI;QAAA,iFACI;QAAA,4EAAW;QAAA,qEAAU;QAAA,4DAAY;QACjC,8EAA8I;QAAnC,0LAAuB;QAAC,4DAAW;QAClJ,4DAAiB;QACrB,4DAAO;QACP,uDAAa;;QAHc,0DAA2B;QAA3B,wFAA2B;QAGtD,0DAAa;QAAb,yFAAa;;6FDGA,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AAEgB;AACN;AACI;AACO;AACT;AAED;AACT;AACgC;AACnB;AACK;;AAEjE,MAAM,eAAe,GAAG,CAAE,0EAAgB,EAAE,oEAAa,EAAE,wEAAe,EAAE,+EAAkB;IACpE,sEAAc,CAAE,CAAC;AAkBpC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,oEAAgB;YAChB,6FAAuB;YACvB,eAAe;YACf,0DAAW;SACZ;mIAIU,SAAS,mBAdlB,2DAAY;QACZ,yEAAe;QACf,8EAAgB,aAGhB,uEAAa;QACb,oEAAgB;QAChB,6FAAuB,EAZD,0EAAgB,EAAE,oEAAa,EAAE,wEAAe,EAAE,+EAAkB;QACpE,sEAAc,EAapC,0DAAW;6FAKF,SAAS;cAhBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,yEAAe;oBACf,8EAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,6FAAuB;oBACvB,eAAe;oBACf,0DAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AClCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;;;;;;;ICIzD,8EAA4C;IAAA,mEAAQ;IAAA,4DAAW;;;IAC/D,8EAA2C;IAAA,oEAAS;IAAA,4DAAW;;;ADE9D,MAAM,eAAe;IAE1B;QADA,WAAM,GAAW,IAAI,CAAC;IACN,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,wBAAwB;IACxB,iBAAiB;IACjB,IAAI;IACJ,0CAA0C;IAC1C,IAAI;IAEJ,WAAW;QAET,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7B,CAAC;;8EAhBU,eAAe;+FAAf,eAAe;QCP5B,iFACI;QAAA,0EAAwB;QAAA,iEAAM;QAAA,4DAAO;QACrC,oEAA6B;QAC7B,4EACE;QAD6C,uIAAS,iBAAa,IAAC;QACpE,qHAA4C;QAC5C,qHAA2C;QAC7C,4DAAS;QACT,4EACE;QAAA,8EAA4B;QAAA,+DAAI;QAAA,4DAAW;QAC7C,4DAAS;QACX,4DAAc;;QAVH,sJAAkC;QAI/B,0DAAe;QAAf,6EAAe;QACf,0DAAc;QAAd,4EAAc;;6FDEjB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","<app-header></app-header>\n<app-add-note></app-add-note>\n","import { Component, OnInit } from '@angular/core';\nimport { fromEvent,  fromEventPattern,  Subscription } from 'rxjs';\nimport { debounceTime, reduce, map, scan } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-note',\n  templateUrl: './add-note.component.html',\n  styleUrls: ['./add-note.component.css']\n})\nexport class AddNoteComponent implements OnInit{\n  placeholder:string = \"Type your notes here... When you come back your notes will still be here!\";\n  noteInput:string = \"\"\n  constructor() { }\n\n  ngOnInit(): void \n  {\n    this.noteInput = localStorage.getItem('note');\n    fromEvent(document, 'input').pipe(map(event=>(<InputEvent>event).data)).subscribe((val) => {\n      // if(val != undefined && localStorage.getItem('note') != \"\")\n      // {\n      //   localStorage.setItem('note', this.noteInput + val);\n      // }\n      // else\n      // {\n      //   localStorage.setItem('note', this.noteInput);\n      // }\n      localStorage.setItem('note', this.noteInput);\n    });\n  }\n}\n\n","<form>\n    <mat-form-field>\n        <mat-label>Note Input</mat-label>\n        <textarea matInput [placeholder]=\"placeholder\" rows=\"10\" class=\"note-text\" id=\"noteInput\" name=\"noteInput\" [(ngModel)]=\"noteInput\"></textarea>\n    </mat-form-field>\n</form>\n{{noteInput}}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport { AddNoteComponent } from './add-note/add-note.component';\n\nconst MaterialModules = [ MatToolbarModule, MatIconModule, MatButtonModule, MatFormFieldModule,\n                          MatInputModule ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    AddNoteComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModules,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, HostBinding, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  isDark:boolean = true;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  // @HostBinding('class')\n  // getThemeMode()\n  // {\n  //   return this.isDark?'theme-dark':none;\n  // }\n\n  changeTheme()\n  {\n    this.isDark = !this.isDark;\n  }\n\n}\n","<mat-toolbar [ngClass]=\"{'theme-dark': isDark}\">\n    <span class=\"menu-text\">Keeper</span>\n    <div class=\"separator\"></div>\n    <button mat-icon-button class=\"icon-container\" (click)=\"changeTheme()\">\n      <mat-icon *ngIf=\"!isDark\" class=\"menu-icon\">wb_sunny</mat-icon>\n      <mat-icon *ngIf=\"isDark\" class=\"menu-icon\">dark_mode</mat-icon>\n    </button>\n    <button mat-icon-button class=\"icon-container\">\n      <mat-icon class=\"menu-icon\">info</mat-icon>\n    </button>\n  </mat-toolbar>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}